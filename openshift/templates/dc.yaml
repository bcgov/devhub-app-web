apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: devhub-app-web
labels:
  template: devhub-app-web
objects:
- apiVersion: v1
  data:
    Caddyfile: |
      0.0.0.0:2015
      root /var/www/html
      log stdout
      errors stdout
      rewrite {
        if  {path} not_match ^\/0.0.0.0
        to  {path} {path}/ /?_url={uri}
      }

      templates {
        ext   .js
      }
      gzip
      # gatsby_cache_control
      # https://www.gatsbyjs.org/docs/caching/
      header / {
        # prevent any static html from being cached
        Cache-Control "public, max-age=0, must-revalidate"
      }

      header /public/static {
        # all static assets SHOULD be cached
        Cache-Control "public, max-age=31536000, immutable"
      }

      header /public/static/sw.js {
        # special js file that should not be cached for offline mode
        Cache-Control "public, max-age=0, must-revalidate"
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: caddy-${NAME}-static${SUFFIX}
    labels:
      app: ${NAME}-static${SUFFIX}
      deploymentconfig: ${NAME}-static${SUFFIX}
      app-name: ${NAME}-static${SUFFIX}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: ${NAME}-static
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${NAME}-static${SUFFIX}
  spec:
    minReadySeconds: 20 # should be ready for atleast 20 seconds before the container is considered available. This will allow us
    # to catch any errors on deploy before they are available to the web
    replicas: 3
    selector:
      deploymentconfig: ${NAME}-static${SUFFIX}
    strategy:
      resources:
        requests:
          cpu: '10m'
          memory: '50Mi'
        limits:
          cpu: '150m'
          memory: '75Mi'
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: ${NAME}-static${SUFFIX}
      spec:
        containers:
        - image: ${NAME}-static:${VERSION}
          name: devhub-app-web
          args:
          - /tmp/scripts/run
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            requests:
              cpu: '10m'
              memory: '50Mi'
            limits:
              cpu: '150m'
              memory: '75Mi'
          env:
          - name: SEARCHGATE_API_URL
            value: ${SEARCHGATE_API_URL}
          - name: SSO_BASE_URL
            value: ${SSO_BASE_URL_VALUE}
          - name: SSO_REALM_NAME
            value: ${SSO_REALM_NAME_VALUE}
          - name: SSO_CLIENT_ID
            value: ${SSO_CLIENT_ID_VALUE}
          - name: MATOMO_URL
            value: ${MATOMO_URL}
          - name: MATOMO_SITE_URL
            value: ${MATOMO_SITE_URL}
          - name: MATOMO_SITE_ID
            value: ${MATOMO_SITE_ID}
          volumeMounts:
          - name: caddy-${NAME}-static${SUFFIX}
            mountPath: /etc/Caddyfile
            readOnly: true
            subPath: Caddyfile
        volumes:
        - name: caddy-${NAME}-static${SUFFIX}
          configMap:
            defaultMode: 420
            name: caddy-${NAME}-static${SUFFIX}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - devhub-app-web
        from:
          kind: ImageStreamTag
          name: ${NAME}-static:${VERSION}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${NAME}-static${SUFFIX}
  spec:
    ports:
    - name: web
      port: 2015
      protocol: TCP
      targetPort: 2015
    selector:
      deploymentconfig: ${NAME}-static${SUFFIX}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/disable_cookies: 'true'
    creationTimestamp: null
    name: ${NAME}-static${SUFFIX}
  spec:
    host:
    port:
      targetPort: web
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${NAME}-static${SUFFIX}
      weight: 100
    wildcardPolicy: None
parameters:
- description: A name used for all objects
  displayName: Name
  name: NAME
  required: true
  value: devhub-app-web
- description: A name suffix used for all objects
  displayName: Suffix
  name: SUFFIX
  required: false
  value: -dev
- description: A version used for the image tags
  displayName: version
  name: VERSION
  required: true
  value: v1.0.0
- description: A name used for routes/services and deployment configs
  displayName: Host
  name: HOST
  required: false
  value: ''
- description: Then end point for connecting to the apollo graphql api gateway 
  displayName: Searchgate Graphql Api Url
  name: SEARCHGATE_API_URL
  required: false
  value: ''
- description: A base url of sso in the env
  displayName: sso base URL
  name: SSO_BASE_URL_VALUE
  required: false
  value: ''
- description: A sso client id in the env
  displayName: sso client id
  name: SSO_CLIENT_ID_VALUE
  required: false
  value: ''
- description: A sso realm name in the env
  displayName: sso realm name
  name: SSO_REALM_NAME_VALUE
  required: false
  value: ''
- description: A volumn used for the caddy from config map
  displayName: volumn name
  name: CADDY_VOLUME_NAME
  required: false
  value: web-caddy-config
- description: Location of the Matomo server that the app should post events to.
  displayName: Matomo URL
  name: MATOMO_URL
  required: false
  value: ''
- description: URL (route) where this app is deployed
  displayName: Matomo URL
  name: MATOMO_SITE_URL
  required: false
  value: ''
- description: Identifier for this site within Matomo
  displayName: Matomo URL
  name: MATOMO_SITE_ID
  required: false
  value: '1'
