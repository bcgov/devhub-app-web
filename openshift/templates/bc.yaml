apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: devhub-app-web-bc-template
labels:
  template: devhub-app-web
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      shared: true
    name: rhscl-nodejs-8-rhel7
  spec:
    lookupPolicy:
      local: false
    tags:
    - name: 8.1-22
      from:
        kind: DockerImage
        name: 'registry.access.redhat.com/rhscl/nodejs-8-rhel7:1-22'
      importPolicy: {}
      referencePolicy:
        type: Local
# base image for node js dependancies
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}-base"
    creationTimestamp:
    annotations:
      description: Nodejs Runtime Image
    labels:
      shared: 'true'
  spec:
    lookupPolicy:
      local: false
# the image stream for the node js build
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      shared: true
    name: ${NAME}
  spec:
    lookupPolicy:
      local: false
#Final ImageStream created by adding the output of the nodejs build in caddy
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: ${NAME}-static
  spec:
    lookupPolicy:
      local: false
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-base${SUFFIX}"
    creationTimestamp:
    labels: {}
    annotations: {}
  spec:
    completionDeadlineSeconds: 1440
    triggers:
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
    runPolicy: SerialLatestOnly
    source:
      contextDir: "${DOCKER_IMAGE_DIRECTORY}"
      type: Binary
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:${NODE_JS_VERSION}
          namespace: openshift
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}-base:${VERSION}"
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 1
        memory: 1Gi
    postCommit: {}
    nodeSelector:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: ${NAME}${SUFFIX}
  spec:
    completionDeadlineSeconds: 1500 # terminate the build if it takes longer than 900 seconds, our builds are avg 10 minutes as of Feb 2019
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:${VERSION}
    postCommit: {}
    resources:
      requests:
        cpu: 1
        memory: 2Gi ## memory usage is high because jest test use a lot of memory when running
        ## we are hoping to move jest tests outside of the assemble script but until we do this will be quite a high request
      limits:
        cpu: 1
        memory: 4Gi
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      contextDir: 'app-web'
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: devhub-gh-token
                key: GITHUB_TOKEN
          - name: MEETUP_API_KEY
            valueFrom: 
              secretKeyRef:
                name: devhub-meetup-token
                key: MEETUP_API_KEY
          - name: EVENT_BRITE_API_KEY
            valueFrom:
              secretKeyRef:
                name: devhub-eventbrite-token
                key: EVENT_BRITE_API_KEY
          - name: GATSBY_MATOMO_URL
            value: ${MATOMO_URL}
          - name: GATSBY_MATOMO_SITE_URL
            value: ${MATOMO_SITE_URL}
          - name: GATSBY_MATOMO_SITE_ID
            value: ${MATOMO_SITE_ID}
        from:
          kind: ImageStreamTag
          name: ${NAME}-base:${VERSION}
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
#Chainned build
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      build: ${NAME}-static${SUFFIX}
    name: ${NAME}-static${SUFFIX}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}-static:${VERSION}
    postCommit: {}
    resources:
      requests:
        cpu: 250m
        memory: 500Mi
      limits:
        cpu: 400m
        memory: 750Mi
    source:
      dockerfile: |-
        FROM nodejs/build-output:latest
        COPY html/* /var/www/html/
      images:
        - from:
            kind: ImageStreamTag
            name: '${NAME}:${VERSION}'
          paths:
            - destinationDir: html
              sourcePath: /opt/app-root/src/public/
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: 'bcgov-s2i-caddy:latest'
          namespace: openshift
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: ${NAME}:${VERSION}
      type: ImageChange
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
parameters:
- description: A name used for all objects
  displayName: Name
  name: NAME
  required: true
  value: devhub-app-web
- description: A name suffix used for all objects
  displayName: Suffix
  name: SUFFIX
  required: false
  value: -dev
- description: A version used for the image tags
  displayName: version
  name: VERSION
  required: true
  value: v1.0.0
- description: SOURCE_REPOSITORY_URL
  displayName: SOURCE_REPOSITORY_URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/cvarjao-o/devhub-app-web.git
- description: SOURCE_REPOSITORY_REF
  displayName: SOURCE_REPOSITORY_REF
  name: SOURCE_REPOSITORY_REF
  required: true
  value: ''
  # latest node js version as of Apr 2 2019
- description: NODE_JS_VERSION
  displayName: NODE_JS_VERSION
  name: NODE_JS_VERSION
  required: true
  value: '10'
- description: DOCKER_IMAGE_DIRECTORY
  displayName: DOCKER_IMAGE_DIRECTORY
  name: DOCKER_IMAGE_DIRECTORY
  required: true
  value: docker-images/nodejs-base
- description: Location of the Matomo server that the app should post events to.
  displayName: Matomo URL
  name: MATOMO_URL
  required: false
  value: ''
- description: URL (route) where this app is deployed
  displayName: Matomo URL
  name: MATOMO_SITE_URL
  required: false
  value: ''
- description: Identifier for this site within Matomo
  displayName: Matomo URL
  name: MATOMO_SITE_ID
  required: false
  value: '1'
