name: Unit tests and uploading test coverage

on:
  pull_request:
    branches: [master]

jobs:
  yarn:
    env:
      FILE_COUNTER: 0
      CC_TEST_REPORTER_ID: 3512ac105b5e332e8450e1c0c4003a78d07f3c52ab7520d1b0b6fac233996730
      ACTION_DEBUG: true
      CI: true
      GITHUB_TOKEN: ${{secrets.GITHUB_API_TOKEN}}
      EVENT_BRITE_API_KEY: ${{secrets.EVENT_BRITE_API_KEY}}
      GATSBY_ALGOLIA_APP_ID: ${{secrets.GATSBY_ALGOLIA_APP_ID}}
      GATSBY_ALGOLIA_SEARCH_KEY: ${{secrets.GATSBY_ALGOLIA_SEARCH_KEY}}
      GATSBY_ACTIVE_ENV: "test"

    name: Create, format and upload Javascript coverage artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Get Code Climate binary
      - name: Download Code Climate Binary
        run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      # Permissions applied to the Code Climate Executable
      - name: Apply executable perms to Code Climate Binary
        run: chmod +x ./cc-test-reporter

      # Before build
      - name: Before build
        run: ./cc-test-reporter before-build

      # Set required Git env vars for either pull request
      - name: Set ENV for codeclimate (pull_request)
        run: |
          echo "::set-env name=GIT_BRANCH::${{ github.event.pull_request.head.ref }}"
          echo "::set-env name=GIT_COMMIT_SHA::${{ github.event.pull_request.head.sha }}"
        if: github.event_name == 'pull_request'

      # Set required Git env vars for a push to master
      - name: Set ENV for codeclimate (push)
        run: |
          echo "::set-env name=GIT_BRANCH::$GITHUB_REF"
          echo "::set-env name=GIT_COMMIT_SHA::$GITHUB_SHA"
        if: github.event_name == 'push'

      # Trimming the ref to master in order to publish correct report (paambaati)
      - name: Set ref/head/master to master
        run: |
          echo "::set-env name=GIT_BRANCH::master"
        if: env.GIT_BRANCH == 'refs/heads/master'

       # Install Modules - Devhub Front-End
      - name: npm install, lint and test
        run: |
          cd app-web
          npm i
          npm run test:lint
          npm run test -- --coverage
      
      # Formatting the FRONTEND coverage report
      - name: Format the FRONTEND coverage report
        run: |
          ./cc-test-reporter format-coverage -t lcov -o coverage/index.html ${{github.workspace}}/app-web/coverage/lcov.info

      # Upload File for debugging purposes
      - name: Upload File for debugging purposes
        uses: actions/upload-artifact@v2
        with:
          name: summed-yarn-coverage-report
          path: coverage/index.html

      # Upload total coverage report to Code Climate
      - name: Upload coverage report to Code Climate
        run: ./cc-test-reporter upload-coverage -i coverage/index.html