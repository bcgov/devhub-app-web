name: On Promotion to Test or Production for Web
on: 
  deployment
env:
  PULL_NUMBER: ${{ fromJSON(github.event.deployment.payload).pr }}
  MICRO_SERVICE: ${{ fromJSON(github.event.deployment.payload).microservice }}
  DEPLOY_REF: ${{ github.event.deployment.ref }}
  DEPLOYMENT_ID: ${{ github.event.deployment.id }}
  ENVIRONMENT: ${{ github.event.deployment.environment }}
  INFRA_NAME: devhub-app-web
jobs:
  promote-environment:
    name: Promote Web to Environment
    if: fromJSON(github.event.deployment.payload).microservice == 'web' && 
      (
        github.event.deployment.environment == 'staging' || 
        github.event.deployment.environment == 'qa' || 
        github.event.deployment.environment == 'production' 
      )
    runs-on: ubuntu-20.04  
    steps:
      - uses: actions/checkout@v1
      
      - name: Change Deploy Status to In Progress
        uses: unacast/actions-github-deployment-status@0.4.0
        with:
          github_token: ${{ github.token }}
          status: in_progress
      - name: Map the deployments environment to a valid Openshift Namespace
        env:
          TEST_NAMESPACE: ${{ secrets.TEST_NAMESPACE }}
          PROD_NAMESPACE: ${{ secrets.PROD_NAMESPACE }}
          DEV_NAMESPACE: ${{ secrets.DEV_NAMESPACE }}
        run: |
          _NAMESPACE=$(.github/helpers/github_env_to_namespace.sh ${{  github.event.deployment.environment}})
          _IMAGE_TAG=$(.github/helpers/github_env_to_image_tag.sh ${{  github.event.deployment.environment}})
          echo "::set-env name=DEPLOY_NAMESPACE::$_NAMESPACE"
          echo "::set-env name=IMAGE_TAG::$_IMAGE_TAG"
          echo "::set-env name=SUFFIX::-$_IMAGE_TAG"
          echo "Deploying to $_NAMESPACE"
      - name: Cluster Login
        uses: redhat-developer/openshift-actions@v1.1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL}}
          parameters: '{"apitoken": "${{ secrets.SA_PASSWORD }}"}'
          cmd: |
            'version'
      - name: Import PR based Image to Environment
        run: |
          oc tag ${{ secrets.TOOLS_NAMESPACE }}/${{ env.INFRA_NAME }}:${{ env.PULL_NUMBER }} \
           ${{ env.DEPLOY_NAMESPACE }}/${{ env.INFRA_NAME }}:${{ env.IMAGE_TAG }}
      - name: Run Deployment
        env:
          IMAGE_NAMESPACE: ${{ env.DEPLOY_NAMESPACE }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          DEPLOY_NAMESPACE: ${{ env.DEPLOY_NAMESPACE }}
          GATSBY_MATOMO_URL: ${{ secrets.GATSBY_MATOMO_URL }}
          GATSBY_MATOMO_SITE_URL: ${{ secrets.GATSBY_MATOMO_SITE_URL }}
          GATSBY_MATOMO_SITE_ID: ${{ secrets.GATSBY_MATOMO_SITE_ID }}
          SEARCHGATE_API_URL: ${{ secrets.SEARCHGATE_API_URL }}
          DEVHUB_API_URL: ${{ secrets.DEVHUB_API_URL }}
          SSO_DEV_URL: ${{ secrets.SSO_DEV_URL }}
          SSO_CLIENT_ID: "devhub-web-${{ env.PULL_NUMBER }}"
          SSO_REALM_NAME: ${{ secrets.SSO_REALM_NAME }}
          MATOMO_URL: ${{ secrets.MATOMO_URL }}
          ALGOLIA_INDEX_NAME_SUFFIX: "-build-${{ env.PULL_NUMBER }}"
        run: .github/helpers/deploy_web.sh

      - name: Wait for Deployment and Update Status
        env:
          NAMESPACE: ${{ env.DEPLOY_NAMESPACE }}
        run: |
          DEPLOY_STATUS=$(.github/helpers/wait_for_deployment.sh dc/$INFRA_NAME$SUFFIX)

          echo "::set-env name=DEPLOY_STATUS::$DEPLOY_STATUS"

      - name: Change Deploy Status to Success or Failure
        uses: unacast/actions-github-deployment-status@0.4.0
        with:
          github_token: ${{ github.token }}
          status: ${{ env.DEPLOY_STATUS }}

      - name: 'Comment PR'
        uses: actions/github-script@0.3.0
        if: env.DEPLOY_STATUS == 'success'
        with:
          github-token: ${{ github.token }}
          script: |
            const {  repo: { owner, repo }  } = context;
            github.issues.createComment({ issue_number: ${{ env.PULL_NUMBER }}, owner, repo, body: 'Deployment to ${{ github.event.deployment.environment }} succeeded!' });