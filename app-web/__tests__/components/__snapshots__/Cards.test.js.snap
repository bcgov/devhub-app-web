// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card Component matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Cards
    cards={
      Array [
        Object {
          "_metadata": Object {
            "position": "000.000.000",
          },
          "attributes": Object {
            "personas": Array [
              "Designer",
            ],
          },
          "childMarkdownRemark": Object {
            "frontmatter": Object {
              "pageOnly": false,
            },
          },
          "id": "1",
          "parent": Object {
            "id": "collection-1",
          },
          "resource": Object {
            "path": "/design-system/Z1bGIqu",
            "type": "Components",
          },
          "source": Object {
            "displayName": "Design System",
          },
          "unfurl": Object {
            "author": "ksingbeil",
            "data1": "",
            "data2": "",
            "description": "What the Design System is and how it works.",
            "image": "https://github.com/bcgov/design-system/blob/master/components/about/about.md?raw=true",
            "label1": "",
            "label2": "",
            "title": "About",
            "type": "markdown",
          },
        },
      ]
    }
    description=""
    sourcePath=""
    topic="topic"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Row
          tag="div"
        >
          <Col
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <div
              className="TopicContainer"
            >
              <h1>
                topic
              </h1>
              <p>
                
              </p>
            </div>
          </Col>
        </Row>,
        <Toggle
          cardComponents={
            Array [
              <ForwardRef(render)
                lg={3}
                md={4}
                sm={6}
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <Card
                  description={null}
                  image={null}
                />
              </ForwardRef(render)>,
            ]
          }
          cardLimits={4}
        />,
      ],
      "className": "CardsContainer",
      "fluid": true,
      "tag": "div",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Col
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <div
              className="TopicContainer"
            >
              <h1>
                topic
              </h1>
              <p>
                
              </p>
            </div>
          </Col>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="TopicContainer"
            >
              <h1>
                topic
              </h1>
              <p>
                
              </p>
            </div>,
            "tag": "div",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  topic
                </h1>,
                <p>
                  
                </p>,
              ],
              "className": "TopicContainer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "topic",
                },
                "ref": null,
                "rendered": "topic",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "",
                },
                "ref": null,
                "rendered": "",
                "type": "p",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "cardComponents": Array [
            <ForwardRef(render)
              lg={3}
              md={4}
              sm={6}
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <Card
                description={null}
                image={null}
              />
            </ForwardRef(render)>,
          ],
          "cardLimits": 4,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Row
            tag="div"
          >
            <Col
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <div
                className="TopicContainer"
              >
                <h1>
                  topic
                </h1>
                <p>
                  
                </p>
              </div>
            </Col>
          </Row>,
          <Toggle
            cardComponents={
              Array [
                <ForwardRef(render)
                  lg={3}
                  md={4}
                  sm={6}
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <Card
                    description={null}
                    image={null}
                  />
                </ForwardRef(render)>,
              ]
            }
            cardLimits={4}
          />,
        ],
        "className": "CardsContainer",
        "fluid": true,
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Col
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <div
                className="TopicContainer"
              >
                <h1>
                  topic
                </h1>
                <p>
                  
                </p>
              </div>
            </Col>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div
                className="TopicContainer"
              >
                <h1>
                  topic
                </h1>
                <p>
                  
                </p>
              </div>,
              "tag": "div",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    topic
                  </h1>,
                  <p>
                    
                  </p>,
                ],
                "className": "TopicContainer",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "topic",
                  },
                  "ref": null,
                  "rendered": "topic",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "",
                  },
                  "ref": null,
                  "rendered": "",
                  "type": "p",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cardComponents": Array [
              <ForwardRef(render)
                lg={3}
                md={4}
                sm={6}
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <Card
                  description={null}
                  image={null}
                />
              </ForwardRef(render)>,
            ],
            "cardLimits": 4,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
